#!/usr/bin/env bash
set -eu

# IMPORTANT NOTE 1: You must have the repo set to build every commit for this script to work!
# IMPORTANT NOTE 2: Each buildkite pipeline slug must be named the same as the apps/<app name> directory

apps='app1 app2'

monorepo_root="$(realpath "$(dirname "${BASH_SOURCE}")/../../..")"

echo "Generating pipeline.yml for BUILDKITE_COMMIT=${BUILDKITE_COMMIT}:"; echo

apps_to_build=''
# loop over all the apps under `apps/`
for app in ${apps}
do
  echo "Checking app '${app}' for paths which trigger builds..."
  # invoke each app's script which lists which absolute paths which trigger builds for that app...
  app_paths_which_trigger_builds=$(${monorepo_root}/apps/${app}/cicd/bk/paths-which-trigger-builds)

  # ...and loop over them
  for app_path_which_triggers_builds in ${app_paths_which_trigger_builds}
  do
    printf "  Checking path '${app_path_which_triggers_builds}' for git diffs... "
    # diff output will be empty if there's no changes in the relative path
    diff_output=$(git diff --relative=${app_path_which_triggers_builds} --shortstat ${BUILDKITE_COMMIT} ${BUILDKITE_COMMIT}^)
    if [[ -z "${diff_output// }" ]]
    then
      echo "No changes found."
    else
      echo "Changes found: ${diff_output}"
      apps_to_build="${apps_to_build} ${app}"
    fi

  done
  echo
done

echo
pipeline_yml_path=${1:-'/tmp/monorepo-pipeline.yml'}
rm -f ${pipeline_yml_path}

if [[ -z "${apps_to_build// }" ]]
then
  echo "No apps changed, not generating ${pipeline_yml_path}:"
else
  # write the pipeline.yml to trigger each app
  echo 'steps:' >> ${pipeline_yml_path}
  for app_to_build in ${apps_to_build}
  do
    echo "- trigger: ${app_to_build}" >> ${pipeline_yml_path}
  done

  echo "Generated ${pipeline_yml_path}:"; echo
  cat ${pipeline_yml_path}
fi
